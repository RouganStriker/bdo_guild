# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2018-03-25 04:44
from __future__ import unicode_literals

import bdo.models.guild
import bdo.models.mixins
from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('level', models.IntegerField()),
                ('ap', models.IntegerField()),
                ('aap', models.IntegerField()),
                ('dp', models.IntegerField()),
                ('is_main', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ('id',),
            },
            bases=(models.Model, bdo.models.mixins.UserPermissionMixin),
        ),
        migrations.CreateModel(
            name='CharacterClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('icon', models.ImageField(upload_to='')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Guild',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('logo_url', models.URLField()),
                ('description', models.TextField(default='')),
                ('discord_id', models.CharField(max_length=75)),
                ('discord_roles', django.contrib.postgres.fields.jsonb.JSONField()),
                ('discord_members', django.contrib.postgres.fields.jsonb.JSONField(default={})),
            ],
            options={
                'ordering': ('id',),
                'permissions': (('view_overview', 'Can see overview page'), ('view_members', 'Can see members page'), ('view_history', 'Can see history page'), ('view_war', 'Can see war page'), ('view_activity_log', 'Can see guild activity log'), ('change_guild_info', 'Can edit basic guild information'), ('change_guild_integration', 'Can edit guild Discord integration'), ('change_member_attendance', "Can edit member's attendance"), ('change_my_attendance', 'Can edit own attendance'), ('change_war', 'Can modify war setup'), ('add_war', 'Can start a pending war'), ('delete_war', 'Can delete a pending war'), ('manage_team', 'Can create, edit or delete teams'), ('manage_call_sign', 'Can create, edit or delete call signs')),
            },
        ),
        migrations.CreateModel(
            name='GuildMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guild', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='membership', to='bdo.Guild')),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='GuildRole',
            fields=[
                ('group_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.Group')),
                ('icon', models.ImageField(blank=True, null=True, upload_to='')),
                ('custom_for', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='custom_guild_roles', to='bdo.Guild')),
            ],
            options={
                'ordering': ('id',),
            },
            bases=('auth.group',),
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('family_name', models.CharField(blank=True, max_length=255, null=True)),
                ('preferences', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('discord_id', models.CharField(blank=True, max_length=255, null=True)),
                ('availability', django.contrib.postgres.fields.jsonb.JSONField(default={'Friday': 2, 'Monday': 2, 'Saturday': 2, 'Sunday': 2, 'Thursday': 2, 'Tuesday': 2, 'Wednesday': 2})),
                ('auto_sign_up', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ('id',),
            },
            bases=(models.Model, bdo.models.mixins.UserPermissionMixin),
        ),
        migrations.CreateModel(
            name='War',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('note', models.CharField(blank=True, max_length=1024, null=True)),
                ('outcome', models.IntegerField(blank=True, choices=[(0, 'WIN'), (1, 'LOSS'), (2, 'STALEMATE')], null=True)),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='WarArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('region', models.IntegerField(choices=[(0, 'Balenos'), (1, 'Serendia'), (2, 'Calpheon'), (3, 'Mediah'), (4, 'Valencia')])),
            ],
        ),
        migrations.CreateModel(
            name='WarAttendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_attending', models.IntegerField(choices=[(0, 'ATTENDING'), (1, 'NOT_ATTENDING'), (2, 'UNDECIDED'), (3, 'NO_SHOW'), (4, 'LATE')], default=2)),
                ('note', models.CharField(blank=True, max_length=512, null=True)),
                ('character', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bdo.Character')),
                ('user_profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='attendance_set', to='bdo.Profile')),
                ('war', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_set', to='bdo.War')),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='WarCallSign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('members', models.ManyToManyField(blank=True, to='bdo.WarAttendance')),
                ('war', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bdo.War')),
            ],
            options={
                'ordering': ('id',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WarNode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('war_day', models.IntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')])),
                ('war_channel', models.IntegerField(default=1)),
                ('tier', models.IntegerField(choices=[(1, 'Level 1'), (2, 'Level 2'), (3, 'Level 3'), (4, 'Territory')])),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bdo.WarArea')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='WarRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('custom_for', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='custom_war_roles', to='bdo.Guild')),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='WarStat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('command_post', models.IntegerField(default=0)),
                ('fort', models.IntegerField(default=0)),
                ('gate', models.IntegerField(default=0)),
                ('help', models.IntegerField(default=0)),
                ('mount', models.IntegerField(default=0)),
                ('placed_objects', models.IntegerField(default=0)),
                ('guild_master', models.IntegerField(default=0)),
                ('officer', models.IntegerField(default=0)),
                ('member', models.IntegerField(default=0)),
                ('death', models.IntegerField(default=0)),
                ('siege_weapons', models.IntegerField(default=0)),
                ('attendance', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='stats', to='bdo.WarAttendance')),
            ],
        ),
        migrations.CreateModel(
            name='WarTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('type', models.IntegerField(choices=[(0, 'PLATOON'), (1, 'PARTY')])),
                ('slot_setup', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('default_role', models.ForeignKey(on_delete=models.SET(bdo.models.guild.WarRole.GET_DEFAULT_ROLE), to='bdo.WarRole')),
            ],
            options={
                'ordering': ('id',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WarTeamSlot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slot', models.IntegerField()),
                ('attendee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='slot', to='bdo.WarAttendance')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='slots', to='bdo.WarTeam')),
            ],
        ),
        migrations.CreateModel(
            name='WarTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('groups', django.contrib.postgres.fields.jsonb.JSONField(default={'call_signs': {}, 'party': {}, 'platoon': {}})),
                ('roles', django.contrib.postgres.fields.jsonb.JSONField(default={})),
            ],
        ),
        migrations.AddField(
            model_name='warteam',
            name='members',
            field=models.ManyToManyField(through='bdo.WarTeamSlot', to='bdo.WarAttendance'),
        ),
        migrations.AddField(
            model_name='warteam',
            name='war',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bdo.War'),
        ),
        migrations.AddField(
            model_name='war',
            name='attendees',
            field=models.ManyToManyField(through='bdo.WarAttendance', to='bdo.Profile'),
        ),
        migrations.AddField(
            model_name='war',
            name='guild',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bdo.Guild'),
        ),
        migrations.AddField(
            model_name='war',
            name='node',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bdo.WarNode'),
        ),
        migrations.AddField(
            model_name='profile',
            name='preferred_roles',
            field=models.ManyToManyField(blank=True, to='bdo.WarRole'),
        ),
        migrations.AddField(
            model_name='profile',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='guildmember',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bdo.GuildRole'),
        ),
        migrations.AddField(
            model_name='guildmember',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='membership', to='bdo.Profile'),
        ),
        migrations.AddField(
            model_name='guild',
            name='members',
            field=models.ManyToManyField(related_name='guilds', through='bdo.GuildMember', to='bdo.Profile'),
        ),
        migrations.AddField(
            model_name='character',
            name='character_class',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bdo.CharacterClass'),
        ),
        migrations.AddField(
            model_name='character',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bdo.Profile'),
        ),
        migrations.AlterUniqueTogether(
            name='warrole',
            unique_together=set([('name', 'custom_for')]),
        ),
        migrations.AlterUniqueTogether(
            name='warnode',
            unique_together=set([('war_day', 'area')]),
        ),
        migrations.AlterUniqueTogether(
            name='warattendance',
            unique_together=set([('user_profile', 'war')]),
        ),
        migrations.AlterUniqueTogether(
            name='profile',
            unique_together=set([('id', 'user')]),
        ),
        migrations.AlterUniqueTogether(
            name='guildmember',
            unique_together=set([('guild', 'user')]),
        ),
    ]
